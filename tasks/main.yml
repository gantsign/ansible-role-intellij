---
- name: assert role vars
  assert:
    that:
      - "intellij_default_jdk_home not in (None, '')"
      - "intellij_default_maven_home not in (None, '')"

- name: assert edition vars
  assert:
    that:
      - "intellij_edition in ('community', 'ultimate')"

- name: load edition vars
  include_vars: "../vars/editions/{{ intellij_edition }}.yml"

- name: load version vars
  with_first_found:
    - "../vars/versions/{{ intellij_version }}-{{ intellij_edition }}.yml"
    - ../vars/versions/default.yml
  include_vars: "{{ item }}"

- name: assert version vars
  assert:
    that:
      - "intellij_redis_sha256sum not in (None, '')"

- name: create download directory
  file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: "{{ intellij_download_dir }}"

- name: download IntelliJ IDEA
  get_url:
    url: "{{ intellij_mirror }}/{{ intellij_redis_filename }}"
    dest: "{{ intellij_download_dir }}/{{ intellij_redis_filename }}"
    sha256sum: "{{ intellij_redis_sha256sum }}"
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: create IntelliJ IDEA installation directory
  become: yes
  file:
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,go=rx'
    dest: "{{ intellij_install_dir }}"

- name: install IntelliJ IDEA
  become: yes
  tags:
    # Suppress: [ANSIBLE0006] tar used in place of unarchive module
    # The unarchive module didn't support `--strip-components` before
    # `extra_opts` was added in 2.1 and we're supporting >= 1.9.
    - skip_ansible_lint
  command: >
    /bin/tar --extract --gunzip --strip-components=1
    --file '{{ intellij_download_dir }}/{{ intellij_redis_filename }}'
    --directory '{{ intellij_install_dir }}'
  args:
    creates: "{{ intellij_install_dir }}/bin"

- name: create bin link
  become: yes
  file:
    src: "{{ intellij_install_dir }}/bin/idea.sh"
    dest: /usr/local/bin/idea
    state: link
    owner: root
    group: root
    mode: 'u=rwx,go=rx'

- name: install IntelliJ IDEA desktop file
  become: yes
  template:
    src: jetbrains-idea.desktop.j2
    dest: "/usr/share/applications/{{ intellij_desktop_filename }}"
    owner: root
    group: root
    mode: 'u=rw,go=r'

- name: create IntelliJ IDEA user config directory
  become: yes
  file:
    dest: "/home/{{ item.username }}/{{ intellij_user_dir }}/config"
    state: directory
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: 'ug=rwx,o=rx'
  with_items: "{{ users }}"

- name: configure disabled plugins
  become: yes
  template:
    src: disabled_plugins.txt.j2
    dest: "/home/{{ item.username }}/{{ intellij_user_dir }}/config/disabled_plugins.txt"
    force: no
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: 'ug=rw,o=r'
  with_items: "{{ users }}"

- name: create IntelliJ IDEA user options directory
  become: yes
  file:
    dest: "/home/{{ item.username }}/{{ intellij_user_dir }}/config/options"
    state: directory
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: 'ug=rwx,o=rx'
  with_items: "{{ users }}"

- name: query Java specification version
  command: "{{ intellij_default_jdk_home }}/bin/jrunscript -e \"print(java.lang.System.getProperty('java.specification.version'))\""
  register: java_specification_version_result
  changed_when: no

- name: load JDK vars
  include_vars: "../vars/jdk_version/{{ java_specification_version_result.stdout }}.yml"

- name: assert JDK vars
  assert:
    that:
      - "intellij_default_jdk_classpath not in (None, '')"
      - "intellij_default_language_level not in (None, '')"

- name: query Java version
  command: "{{ intellij_default_jdk_home }}/bin/jrunscript -e \"print(java.lang.System.getProperty('java.version'))\""
  register: java_version_result
  changed_when: no

- name: configure JDKs
  become: yes
  template:
    src: jdk.table.xml.j2
    dest: "/home/{{ item.username }}/{{ intellij_user_dir }}/config/options/jdk.table.xml"
    force: no
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: 'ug=rw,o=r'
  with_items: "{{ users }}"

- name: configure project
  become: yes
  template:
    src: project.default.xml.j2
    dest: "/home/{{ item.username }}/{{ intellij_user_dir }}/config/options/project.default.xml"
    force: no
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
    mode: 'ug=rw,o=r'
  with_items: "{{ users }}"

- name: install Ansible facts.d directory
  become: yes
  file:
    state: directory
    dest: /etc/ansible/facts.d
    owner: root
    group: root
    mode: 'u=rwx,go=rx'

- name: install IntelliJ facts
  become: yes
  template:
    src: facts.j2
    dest: /etc/ansible/facts.d/intellij.fact
    owner: root
    group: root
    mode: 'u=rw,go=r'

- name: re-read facts
  setup: filter=ansible_local
